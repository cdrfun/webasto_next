# Protocol requirements
# The Webasto Unite charging station acts as a slave device in Modbus TCP/IP communication.
# Charging station should be in the same network with the master device, or proper routing should be applied to provide communication between slave and master devices in different sub networks.
# Each charging station should have a different IP address. There can only be one active Modbus master connection at any time.
# Parameter Modbus TCP
# Each Wallbox Unite must be given a unique IP.
# Parameter                     Value 
# IP-address:                   Any IP address; All Webasto Unite on the same subnet (e.g., xxx.xxx.xxx.xxx)
# Modbus Port:                  502
# Modbus Unit ID:               255
modbus:
  - name: Webasto_Next
    type: tcp
    timeout: 5
    host: !secret webasto_modbus_host_ip
    port: !secret webasto_modbus_port
    sensors:
      - name: Webasto_Next_Charge_Point_State
    # 0: "Available",
    # 1: "Preparing",
    # 2: "Charging",
    # 3: "SuspendedEVSE",
    # 4: "SuspendedEV",
    # 5: "Finishing",
    # 6: "Reserved",
    # 7: "Unavailable",
    # 8: "Faulted",
        unique_id: Webasto_Next_Charge_Point_State
        slave: 255
        input_type: input
        address: 1000
        data_type: uint16
        
      - name: Webasto_Next_Charging_State
    # 0: Not Charging, State Ax, Bx, Dx or C1 1: Charging, state C2      
        unique_id: Webasto_Next_Charging_State
        slave: 255
        input_type: input
        address: 1001
        data_type: uint16
        
      - name: Webasto_Next_Equipment_State
    # 0: Initializing
    # 1: Running
    # 2: Fault
    # 3: Disabled
    # 4: Updating      
        unique_id: Webasto_Next_Equipment_State
        slave: 255
        input_type: input
        address: 1002
        data_type: uint16

      - name: Webasto_Next_Cable_State
    # 0: Cable not connected 1: Cable connected, vehicle not connected 2: Cable connected, vehicle connected 3: Cable connected, vehicle connected, cable locked
        unique_id: Webasto_Next_Cable_State
        slave: 255
        input_type: input
        address: 1004
        data_type: uint16
        
      - name: Webasto_Next_EVSE_Fault_Code
    # 0: No fault
    # Other: Fault code      
        unique_id: Webasto_Next_EVSE_Fault_Code
        slave: 255
        input_type: input
        address: 1006
        data_type: uint16
        
      - name: Webasto_Next_Charging_Current_L1
        unique_id: Webasto_Next_Charging_Current_L1
        slave: 255
        input_type: input
        address: 1008
        data_type: uint16
        device_class: current
        offset: 0
        scale: 0.001
        precision: 0
        state_class: measurement
        unit_of_measurement: A

      - name: Webasto_Next_Charging_Current_L2
        unique_id: Webasto_Next_Charging_Current_L2
        slave: 255
        input_type: input
        address: 1010
        data_type: uint16
        device_class: current
        offset: 0
        scale: 0.001
        precision: 0
        state_class: measurement
        unit_of_measurement: A

      - name: Webasto_Next_Charging_Current_L3
        unique_id: Webasto_Next_Charging_Current_L3
        slave: 255
        input_type: input
        address: 1012
        data_type: uint16
        device_class: current
        offset: 0
        scale: 0.001
        precision: 0
        state_class: measurement
        unit_of_measurement: A
        
      - name: Webasto_Next_Active_Power_Total
        unique_id: Webasto_Next_Active_Power_Total
        slave: 255
        input_type: input
        address: 1020
        data_type: uint32
        device_class: power
        state_class: measurement
        unit_of_measurement: W
        
      - name: Webasto_Next_Active_Power_L1
        unique_id: Webasto_Next_Active_Power_L1
        slave: 255
        input_type: input
        address: 1024
        data_type: uint32
        device_class: power
        state_class: measurement
        unit_of_measurement: W
        
      - name: Webasto_Next_Active_Power_L2
        unique_id: Webasto_Next_Active_Power_L2
        slave: 255
        input_type: input
        address: 1028
        data_type: uint32
        device_class: power
        state_class: measurement
        unit_of_measurement: W
        
      - name: Webasto_Next_Active_Power_L3
        unique_id: Webasto_Next_Active_Power_L3
        slave: 255
        input_type: input
        address: 1032
        data_type: uint32
        device_class: power
        state_class: measurement
        unit_of_measurement: W

      - name: Webasto_Next_Meter_Reading
        unique_id: Webasto_Next_Meter_Reading
        slave: 255
        input_type: input
        address: 1036
        data_type: uint32
        device_class: energy
        state_class: total_increasing
        offset: 0
        scale: 0.001
        precision: 3
        unit_of_measurement: kWh

      - name: Webasto_Next_Session_Max_Current
        unique_id: Webasto_Next_Session_Max_Current
        slave: 255
        input_type: input
        address: 1100
        data_type: uint16
        device_class: current
        state_class: measurement
        unit_of_measurement: A

      - name: Webasto_Next_EVSE_Min_Current
        unique_id: Webasto_Next_EVSE_Min_Current
        slave: 255
        input_type: input
        address: 1102
        data_type: uint16
        device_class: current
        state_class: measurement
        unit_of_measurement: A

      - name: Webasto_Next_EVSE_Max_Current
        unique_id: Webasto_Next_EVSE_Max_Current
        slave: 255
        input_type: input
        address: 1104
        data_type: uint16
        device_class: current
        state_class: measurement
        unit_of_measurement: A

      - name: Webasto_Next_Cable_Max_Current
        unique_id: Webasto_Next_Cable_Max_Current
        slave: 255
        input_type: input
        address: 1106
        data_type: uint16
        device_class: current
        state_class: measurement
        unit_of_measurement: A

      - name: Webasto_Next_EV_Max_Current
        unique_id: Webasto_Next_EV_Max_Current
        slave: 255
        input_type: input
        address: 1108
        data_type: uint16
        device_class: current
        state_class: measurement
        unit_of_measurement: A

      - name: Webasto_Next_Charged_Energy
        unique_id: Webasto_Next_Charged_Energy
        # Sum of charged energy for the last session. During a session the value 0Wh is returned
        slave: 255
        input_type: input
        address: 1502
        data_type: uint16
        device_class: energy
        state_class: measurement
        unit_of_measurement: Wh

      - name: Webasto_Next_Session_Start_Time
        unique_id: Webasto_Next_Session_Start_Time
        slave: 255
        input_type: input
        address: 1504
        data_type: uint32

      - name: Webasto_Next_Session_Duration
        unique_id: Webasto_Next_Session_Duration
        slave: 255
        input_type: input
        address: 1508
        data_type: uint32
        device_class: duration
        state_class: measurement
        unit_of_measurement: s

      - name: Webasto_Next_Session_End_Time
        unique_id: Webasto_Next_Session_End_Time
        slave: 255
        input_type: input
        address: 1512
        data_type: uint32
        
      - name: Webasto_Next_Failsafe_Current
      # R/W: Can be set in the Unite WebUI (Standard:6A)
        unique_id: Webasto_Next_Failsafe_Current
        slave: 255
        input_type: holding
        address: 2000
        data_type: uint16
        device_class: current
        state_class: measurement
        unit_of_measurement: A
      # Failsafe charging current during communication failure

      - name: Webasto_Next_Failsafe_Timeout
      # R/W: No need to change (Standard: 20 seconds)
        unique_id: Webasto_Next_Failsafe_Timeout
        slave: 255
        input_type: holding
        address: 2002
        data_type: uint16
      # Communication timeout for switching to Failsafe charging current. If the timeout has occurred and the TCP socket is still active, TCP socket restarts. If set, Failsafe period is timeout/2, otherwise 20 sec.

      - name: Webasto_Next_Charge_Power
        unique_id: Webasto_Next_Charge_Power
        slave: 255
        input_type: holding
        address: 5000
        data_type: uint32
        device_class: power
        state_class: measurement
        unit_of_measurement: W

    switches:
      - name: Webasto_Next_Alive_Register
      # R/W
        unique_id: Webasto_Next_Alive_Register
        slave: 255
        write_type: holding
        address: 6000
        command_on: 1
        command_off: 0
        verify:
          delay: 5
      # EMS (Master) writes 1 EVSE (Slave) writes 0 (EVSE checks this register at a period of (Failsafe Timeout)/2 for a value of 1, and sets it to 0.)

input_number:
  webasto_next_current_value_slider:
    name: Webasto Next Current Value
    initial: 5
    min: 4
    max: 16
    step: 1
    unit_of_measurement: 'A'

input_boolean:
  webasto_next_on:
    name: Webasto Next On
    icon: mdi:lightning-bolt
    initial: on

recorder:
  exclude:
    entities:
      - automation.webasto_next_keep_alive

automation:
  - alias: Webasto Next Keep Alive
    description: Webasto Next Keep Alive
    trigger:
      - platform: time_pattern
        seconds: /10
    condition: []
    action:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.webasto_next_alive_register
    mode: single
  
  - alias: Set Webasto Next Current Limit
    description: Set Webasto Next Current Limit
    trigger:
      - platform: state
        entity_id:
          - input_number.webasto_next_current_value_slider
    condition: []
    action:
      - service: modbus.write_register
        data:
          hub: Webasto_Next
          address: 5004
          slave: 255
          # Set the value of the register to the value of the input_number + 1, as the register value is shifted by one
          value:
            - "{{ (states.input_number.webasto_next_current_value_slider.state | int) + 1 }}"
      - service: modbus.write_register
        data:
          hub: Webasto_Next
          address: 6000  # Alive Register
          slave: 255
          value: [1]
      - service: input_boolean.turn_{{ 'on' if (states.input_number.webasto_next_current_value_slider.state | int) >= 5 else 'off' }}
        target:
          entity_id: input_boolean.webasto_next_on

  - alias: Set Webasto Next On
    description: Toggle between off (4A) and low on (5A) charging mode
    trigger:
      - platform: state
        entity_id: input_boolean.webasto_next_on
    action:
      - service: input_number.set_value
        target:
          entity_id: input_number.webasto_next_current_value_slider
        data:
          value: "{{ 5 if trigger.to_state.state == 'on' else 4 }}"

script:
  webasto_next_cancel_charging_session:
    alias: Webasto Next Cancel Charging Session
    sequence:
      - service: modbus.write_register
        data:
          hub: Webasto_Next
          address: 6000
          slave: 255
          value: [2]
      - delay: '00:00:05'
      - service: modbus.write_register
        data:
          hub: Webasto_Next
          address: 5006
          slave: 255
          value: [0]
      - service: modbus.write_register
        data:
          hub: Webasto_Next
          address: 6000  # Alive Register
          slave: 255
          value: [1]
  webasto_next_start_charging_session:
    alias: Webasto Next Start Charging Session
    sequence:
      - service: modbus.write_register
        data:
          hub: Webasto_Next
          address: 5006
          slave: 255
          value: [1]
      - service: modbus.write_register
        data:
          hub: Webasto_Next
          address: 6000  # Alive Register
          slave: 255
          value: [1]

template:
  - sensor:
      - name: Webasto_Next_Charge_Point_State_Human_Readable
        state: >
          {% set state_map = {
            0: "Available",
            1: "Preparing",
            2: "Charging",
            3: "SuspendedEVSE",
            4: "SuspendedEV",
            5: "Finishing",
            6: "Reserved",
            7: "Unavailable",
            8: "Faulted"
          } %}
          {{ state_map[states('sensor.Webasto_Next_charge_point_state') | int] }}
      - name: Webasto_Next_Charging_State_Human_Readable
        state: >
          {% set state_map = {
            0: "Not Charging",
            1: "Charging"
          } %}
          {{ state_map[states('sensor.Webasto_Next_charging_state') | int] }}
      - name: Webasto_Next_Equipment_State_Human_Readable
        state: >
          {% set state_map = {
            0: "Initializing",
            1: "Running",
            2: "Fault",
            3: "Disabled",
            4: "Updating"
          } %}
          {{ state_map[states('sensor.Webasto_Next_equipment_state') | int] }}
      - name: Webasto_Next_Cable_State_Human_Readable
        state: >
          {% set state_map = {
            0: "Cable not connected",
            1: "Cable connected, vehicle not connected",
            2: "Cable connected, vehicle connected",
            3: "Cable connected, vehicle connected, cable locked"
          } %}
          {{ state_map[states('sensor.Webasto_Next_Cable_State') | int] }}
      - name: Webasto_Next_EVSE_Fault_Code_Human_Readable
        state: >
          {% set fault_code = states('sensor.Webasto_Next_evse_fault_code') | int %}
          {% if fault_code == 0 %}
            No fault
          {% else %}
            Error {{ fault_code }}
          {% endif %}
